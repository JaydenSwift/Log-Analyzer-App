<Window x:Class="Log_Analyzer_App.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:Log_Analyzer_App"
        mc:Ignorable="d"
        Height="850" Width="1200" WindowStartupLocation="CenterScreen"
        WindowStyle="None" ResizeMode="NoResize" Background="{x:Null}" AllowsTransparency="True" Loaded="Window_Loaded">
    <Grid>
        <materialDesign:Card Margin="10" UniformCornerRadius="15">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="15*" />
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <Style TargetType="materialDesign:PackIcon">
                        <Setter Property="Width" Value="30"></Setter>
                        <Setter Property="Height" Value="30"></Setter>
                    </Style>

                    <!-- Style for Sidebar Buttons for visual consistency and responsiveness -->
                    <Style x:Key="SidebarButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}">
                        <Setter Property="Background" Value="{x:Null}"/>
                        <Setter Property="BorderBrush" Value="{x:Null}"/>
                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                        <Style.Triggers>
                            <!-- Change Foreground on hover -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
                            </Trigger>
                            <!-- If the parent ListViewItem is selected, change the background color -->
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SecondaryHueLightBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
                                <!-- FIX: Removed invalid ShadowAssist.ShadowDepth setter causing XDG0012 and XLS0431 -->
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>

                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="0 10"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Height" Value="56"/>
                        <Setter Property="Width" Value="56"/>
                        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
                    </Style>
                </Grid.Resources>

                <!-- Sidebar Grid (Column 0) -->
                <Grid Grid.Column="0" Background="{StaticResource MaterialDesignPaper}">

                    <!-- The ListView handles the selection state which we use for navigation -->
                    <ListView x:Name="SidebarMenu" Margin="0 15" SelectionChanged="SidebarMenu_SelectionChanged">

                        <!-- 1. Log Analyzer (Default Page) -->
                        <ListViewItem Tag="LogAnalyzerView" IsSelected="True">
                            <Button Style="{StaticResource SidebarButton}" ToolTip="Log Analyzer">
                                <materialDesign:PackIcon Kind="FileDocumentMultipleOutline"/>
                            </Button>
                        </ListViewItem>

                        <!-- 2. Chart Viewer -->
                        <ListViewItem Tag="ChartViewer">
                            <Button Style="{StaticResource SidebarButton}" ToolTip="Chart Viewer">
                                <materialDesign:PackIcon Kind="ChartBoxOutline"/>
                            </Button>
                        </ListViewItem>

                        <!-- 3. Settings -->
                        <ListViewItem Tag="SettingsView">
                            <Button Style="{StaticResource SidebarButton}" ToolTip="Settings">
                                <materialDesign:PackIcon Kind="CogOutline"/>
                            </Button>
                        </ListViewItem>

                        <!-- Exit Button (Retained) -->
                        <ListViewItem HorizontalAlignment="Center" Margin="0 60 0 0" IsSelected="False" Tag="Exit">
                            <Button Style="{StaticResource MaterialDesignFloatingActionButton}" HorizontalAlignment="Left"
                             BorderBrush="{x:Null}" Background="{x:Null}" Foreground="Black" x:Name="btnExit" Click="btnExit_Click" ToolTip="Exit Application">
                                <StackPanel Margin="-5">
                                    <materialDesign:PackIcon Kind="ExitToApp"/>
                                </StackPanel>
                            </Button>
                        </ListViewItem>
                    </ListView>
                </Grid>

                <!-- Content Area -->
                <Grid Grid.Column="1" Background="White" x:Name="RenderPages">
                    <!-- Views will be dynamically loaded here -->
                </Grid>
            </Grid>
        </materialDesign:Card>
    </Grid>
</Window>
